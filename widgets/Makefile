# Makefile.in generated automatically by automake 1.5 from Makefile.am.
# Generated automatically from Makefile.in by config.pl.
# KDE tags expanded automatically by am_edit - $Revision$ 

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# this has all of the subdirectories that make will recurse into.  if
# there are none, comment this out
#SUBDIRS =

# this is the program that gets installed.  it's name is used for all
# of the other Makefile.am variables

SHELL = /bin/sh

srcdir = .
top_srcdir = ..
VPATH = .
prefix = /opt/kde31
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/src
pkglibdir = $(libdir)/src
pkgincludedir = $(includedir)/src
top_builddir = ..

ACLOCAL = ${SHELL} /home/eric/projects/kommander/src/admin/missing --run aclocal
AUTOCONF = ${SHELL} /home/eric/projects/kommander/src/admin/missing --run autoconf
AUTOMAKE = ${SHELL} /home/eric/projects/kommander/src/admin/missing --run automake
AUTOHEADER = ${SHELL} /home/eric/projects/kommander/src/admin/missing --run autoheader

INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = 
build_triplet = i686-pc-linux-gnu
host_alias = 
host_triplet = i686-pc-linux-gnu
target_alias = 
target_triplet = i686-pc-linux-gnu
AMTAR = ${SHELL} /home/eric/projects/kommander/src/admin/missing --run tar
ARTSCCONFIG = /opt/kde31/bin/artsc-config
AS = @AS@
AUTODIRS = 
AWK = gawk
CC = gcc
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in
CPP = gcc -E
CXX = g++
CXXCPP = g++ -E
DCOPIDL = /opt/kde31/bin/dcopidl
DCOPIDL2CPP = /opt/kde31/bin/dcopidl2cpp
DCOP_DEPENDENCIES = $(DCOPIDL)
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = echo
EXEEXT = 
FRAMEWORK_COREAUDIO = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /usr/bin/msgfmt
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = /opt/kde31/bin/kde-config
KDE_EXTRA_RPATH = 
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = -I/opt/kde31/include
KDE_LDFLAGS = -L/opt/kde31/lib
KDE_MT_LDFLAGS = 
KDE_MT_LIBS = -lpthread
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH) $(KDE_MT_LDFLAGS)
KDE_RPATH = -R $(kde_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_XSL_STYLESHEET = /opt/kde31/share/apps/ksgmltools2/customization/kde-chunk.xsl
LEX = @LEX@
LEXLIB = @LEXLIB@
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = @LIBGEN@
LIBJPEG = -ljpeg
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = -lpng -lz -lm
LIBPTHREAD = -lpthread
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = -lresolv
LIBSHADOW = @LIBSHADOW@
LIBSM = -lSM -lICE
LIBSOCKET =  -lresolv
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBUCB = 
LIBUTIL = -lutil
LIBXINERAMA = 
LIBZ = -lz
LIB_KAB = -lkab
LIB_KDECORE = -lkdecore
LIB_KDEPRINT = -lkdeprint
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkio
LIB_KFM = 
LIB_KHTML = -lkhtml
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lkio
LIB_POLL = 
LIB_QPE = 
LIB_QT = -lqt-mt  $(LIBPNG) -lXext $(LIB_X11) $(LIBSM) -lpthread
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LIB_XEXT = -lXext
LN_S = ln -s
MCOPIDL = /opt/kde31/bin/mcopidl
MEINPROC = /opt/kde31/bin/meinproc
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /opt/qt3/bin/moc
MSGFMT = /usr/bin/msgfmt
NOOPT_CFLAGS = -O0
NOOPT_CXXFLAGS = -O0
NOREPO = -fno-repo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = src
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = 
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = -I/opt/qt3/include
QT_LDFLAGS = 
RANLIB = ranlib
RC = @RC@
REPO = -frepo
SETUIDFLAGS = @SETUIDFLAGS@
STRIP = strip
TOPSUBDIRS =  widgets executor editor
UIC = /opt/qt3/bin/uic -L $(kde_widgetdir) -nounload
UIC_TR = tr2i18n
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = 
VERSION = 3.0.7
WOVERLOADED_VIRTUAL = 
XGETTEXT = /usr/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS =  -lresolv
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
all_includes = -I/opt/kde31/include -I/opt/qt3/include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/opt/kde31/lib 
am__include = include
am__quote = 
idldir = @idldir@
install_sh = /home/eric/projects/kommander/src/admin/install-sh
jni_includes = @jni_includes@
kde_appsdir = ${prefix}/share/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${prefix}/share/config
kde_datadir = ${prefix}/share/apps
kde_htmldir = ${prefix}/share/doc/HTML
kde_icondir = ${prefix}/share/icons
kde_includes = /opt/kde31/include
kde_libraries = /opt/kde31/lib
kde_libs_htmldir = /opt/kde31/share/doc/HTML
kde_libs_prefix = /opt/kde31
kde_locale = ${prefix}/share/locale
kde_mimedir = ${prefix}/share/mimelnk
kde_moduledir = ${libdir}/kde3
kde_qtver = 3
kde_servicesdir = ${prefix}/share/services
kde_servicetypesdir = ${prefix}/share/servicetypes
kde_sounddir = ${prefix}/share/sounds
kde_styledir = ${libdir}/kde3/plugins/styles
kde_templatesdir = ${prefix}/share/templates
kde_wallpaperdir = ${prefix}/share/wallpapers
kde_widgetdir = ${libdir}/kde3/plugins/designer
micodir = @micodir@
qt_includes = /opt/qt3/include
qt_libraries = 
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

SUBDIRS = .
lib_LTLIBRARIES = libkommanderwidgets.la

# set the include path for X, qt and KDE
INCLUDES = $(all_includes) -I../editor

# the library search path. 
#widgets_LDFLAGS = $(KDE_RPATH) $(all_libraries)
libkommanderwidgets_la_LDFLAGS = $(KDE_RPATH) $(all_libraries)

# the libraries to link against.
#widgets_LDADD   = $(LIB_KFILE) $(LIB_KIO)
libkommanderwidgets_la_LIBADD = $(LIB_KFILE) $(LIB_KIO)

# which sources should be compiled for widgets
libkommanderwidgets_la_SOURCES = assoctextwidget.cpp myprocess.cpp buttongroup.cpp ewidgetfactory.cpp subdialog.cpp checkbox.cpp closebutton.cpp combobox.cpp listbox.cpp wizard.cpp dialog.cpp tabwidget.cpp execbutton.cpp fileselector.cpp groupbox.cpp	lineedit.cpp radiobutton.cpp  spinboxint.cpp textedit.cpp

# these are the headers for your project that won't be installed
noinst_HEADERS = assoctextwidget.h  myprocess.h buttongroup.h  checkbox.h ewidgetfactory.h subdialog.h  closebutton.h  combobox.h listbox.h wizard.h dialog.h	   execbutton.h   fileselector.h  groupbox.h	 lineedit.h radiobutton.h	   spinboxint.h   textedit.h tabwidget.h

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
subdir = widgets
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libkommanderwidgets_la_DEPENDENCIES =
am_libkommanderwidgets_la_OBJECTS = assoctextwidget.lo myprocess.lo \
	buttongroup.lo ewidgetfactory.lo subdialog.lo checkbox.lo \
	closebutton.lo combobox.lo listbox.lo wizard.lo dialog.lo \
	tabwidget.lo execbutton.lo fileselector.lo groupbox.lo \
	lineedit.lo radiobutton.lo spinboxint.lo textedit.lo
#>- libkommanderwidgets_la_OBJECTS = $(am_libkommanderwidgets_la_OBJECTS)
#>+ 9
libkommanderwidgets_la_final_OBJECTS = libkommanderwidgets_la.all_cpp.lo 
libkommanderwidgets_la_nofinal_OBJECTS = assoctextwidget.lo myprocess.lo \
	buttongroup.lo ewidgetfactory.lo subdialog.lo checkbox.lo \
	closebutton.lo combobox.lo listbox.lo wizard.lo dialog.lo \
	tabwidget.lo execbutton.lo fileselector.lo groupbox.lo \
	lineedit.lo radiobutton.lo spinboxint.lo textedit.lo\
	subdialog.moc.lo groupbox.moc.lo tabwidget.moc.lo buttongroup.moc.lo dialog.moc.lo execbutton.moc.lo radiobutton.moc.lo myprocess.moc.lo textedit.moc.lo combobox.moc.lo spinboxint.moc.lo lineedit.moc.lo fileselector.moc.lo listbox.moc.lo closebutton.moc.lo wizard.moc.lo checkbox.moc.lo 
libkommanderwidgets_la_OBJECTS = $(libkommanderwidgets_la_nofinal_OBJECTS)
#libkommanderwidgets_la_OBJECTS = $(libkommanderwidgets_la_final_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS =  -DQT_THREAD_SUPPORT  -D_REENTRANT -g -DKOMMANDER -DDESIGNER -DQT_NO_SQL -DHAVE_KDE
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
#>- DEP_FILES = $(DEPDIR)/assoctextwidget.Plo \
#>- 	$(DEPDIR)/buttongroup.Plo $(DEPDIR)/checkbox.Plo \
#>- 	$(DEPDIR)/closebutton.Plo $(DEPDIR)/combobox.Plo \
#>- 	$(DEPDIR)/dialog.Plo $(DEPDIR)/ewidgetfactory.Plo \
#>- 	$(DEPDIR)/execbutton.Plo $(DEPDIR)/fileselector.Plo \
#>- 	$(DEPDIR)/groupbox.Plo $(DEPDIR)/lineedit.Plo \
#>- 	$(DEPDIR)/listbox.Plo $(DEPDIR)/myprocess.Plo \
#>- 	$(DEPDIR)/radiobutton.Plo $(DEPDIR)/spinboxint.Plo \
#>- 	$(DEPDIR)/subdialog.Plo $(DEPDIR)/tabwidget.Plo \
#>- 	$(DEPDIR)/textedit.Plo $(DEPDIR)/wizard.Plo
#>+ 21
#DEP_FILES =  $(DEPDIR)/subdialog.moc.P $(DEPDIR)/groupbox.moc.P $(DEPDIR)/tabwidget.moc.P $(DEPDIR)/buttongroup.moc.P $(DEPDIR)/execbutton.moc.P $(DEPDIR)/radiobutton.moc.P $(DEPDIR)/myprocess.moc.P $(DEPDIR)/textedit.moc.P $(DEPDIR)/combobox.moc.P $(DEPDIR)/spinboxint.moc.P $(DEPDIR)/lineedit.moc.P $(DEPDIR)/fileselector.moc.P $(DEPDIR)/listbox.moc.P $(DEPDIR)/closebutton.moc.P $(DEPDIR)/wizard.moc.P $(DEPDIR)/checkbox.moc.P  $(DEPDIR)/libkommanderwidgets_la.all_cpp.P  $(DEPDIR)/assoctextwidget.Plo \
		$(DEPDIR)/buttongroup.Plo $(DEPDIR)/checkbox.Plo \
		$(DEPDIR)/closebutton.Plo $(DEPDIR)/combobox.Plo \
		$(DEPDIR)/dialog.Plo $(DEPDIR)/ewidgetfactory.Plo \
		$(DEPDIR)/execbutton.Plo $(DEPDIR)/fileselector.Plo \
		$(DEPDIR)/groupbox.Plo $(DEPDIR)/lineedit.Plo \
		$(DEPDIR)/listbox.Plo $(DEPDIR)/myprocess.Plo \
		$(DEPDIR)/radiobutton.Plo $(DEPDIR)/spinboxint.Plo \
		$(DEPDIR)/subdialog.Plo $(DEPDIR)/tabwidget.Plo \
		$(DEPDIR)/textedit.Plo $(DEPDIR)/wizard.Plo
DEP_FILES =  $(DEPDIR)/subdialog.moc.P $(DEPDIR)/groupbox.moc.P $(DEPDIR)/tabwidget.moc.P $(DEPDIR)/buttongroup.moc.P $(DEPDIR)/execbutton.moc.P $(DEPDIR)/radiobutton.moc.P $(DEPDIR)/myprocess.moc.P $(DEPDIR)/textedit.moc.P $(DEPDIR)/combobox.moc.P $(DEPDIR)/spinboxint.moc.P $(DEPDIR)/lineedit.moc.P $(DEPDIR)/fileselector.moc.P $(DEPDIR)/listbox.moc.P $(DEPDIR)/closebutton.moc.P $(DEPDIR)/wizard.moc.P $(DEPDIR)/checkbox.moc.P  $(DEPDIR)/assoctextwidget.Plo \
		$(DEPDIR)/buttongroup.Plo $(DEPDIR)/checkbox.Plo \
		$(DEPDIR)/closebutton.Plo $(DEPDIR)/combobox.Plo \
		$(DEPDIR)/dialog.Plo $(DEPDIR)/ewidgetfactory.Plo \
		$(DEPDIR)/execbutton.Plo $(DEPDIR)/fileselector.Plo \
		$(DEPDIR)/groupbox.Plo $(DEPDIR)/lineedit.Plo \
		$(DEPDIR)/listbox.Plo $(DEPDIR)/myprocess.Plo \
		$(DEPDIR)/radiobutton.Plo $(DEPDIR)/spinboxint.Plo \
		$(DEPDIR)/subdialog.Plo $(DEPDIR)/tabwidget.Plo \
		$(DEPDIR)/textedit.Plo $(DEPDIR)/wizard.Plo

#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -Wnon-virtual-dtor -Wno-long-long -Wbad-function-cast -Wundef -Wall -pedantic -W -Wpointer-arith -Wmissing-prototypes -Wwrite-strings -ansi -D_XOPEN_SOURCE=500 -D_BSD_SOURCE -Wcast-align -Wconversion -O2 -fno-exceptions -fno-check-new
DIST_SOURCES = $(libkommanderwidgets_la_SOURCES)
HEADERS = $(noinst_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libkommanderwidgets_la_SOURCES)

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- $(AUTOMAKE) --gnu  widgets/Makefile
#>+ 3
	cd $(top_srcdir) && \
	$(AUTOMAKE) --gnu  widgets/Makefile
	cd $(top_srcdir) && perl admin/am_edit widgets/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	CONFIG_HEADERS= CONFIG_LINKS= \
	CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	if test -f $$p; then \
	echo " $(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p"; \
	$(LIBTOOL) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p; \
	else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	$(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
libkommanderwidgets.la: $(libkommanderwidgets_la_OBJECTS) $(libkommanderwidgets_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libkommanderwidgets_la_LDFLAGS) $(libkommanderwidgets_la_OBJECTS) $(libkommanderwidgets_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include $(DEPDIR)/assoctextwidget.Plo
include $(DEPDIR)/buttongroup.Plo
include $(DEPDIR)/checkbox.Plo
include $(DEPDIR)/closebutton.Plo
include $(DEPDIR)/combobox.Plo
include $(DEPDIR)/dialog.Plo
include $(DEPDIR)/ewidgetfactory.Plo
include $(DEPDIR)/execbutton.Plo
include $(DEPDIR)/fileselector.Plo
include $(DEPDIR)/groupbox.Plo
include $(DEPDIR)/lineedit.Plo
include $(DEPDIR)/listbox.Plo
include $(DEPDIR)/myprocess.Plo
include $(DEPDIR)/radiobutton.Plo
include $(DEPDIR)/spinboxint.Plo
include $(DEPDIR)/subdialog.Plo
include $(DEPDIR)/tabwidget.Plo
include $(DEPDIR)/textedit.Plo
include $(DEPDIR)/wizard.Plo

distclean-depend:
	-rm -rf $(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	echo "Making $$target in $$subdir"; \
	if test "$$subdir" = "."; then \
	dot_seen=yes; \
	local_target="$$target-am"; \
	else \
	local_target="$$target"; \
	fi; \
	(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	|| case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	$(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
	maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	*) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	if test "$$subdir" = "."; then :; else \
	rev="$$subdir $$rev"; \
	fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	echo "Making $$target in $$subdir"; \
	if test "$$subdir" = "."; then \
	local_target="$$target-am"; \
	else \
	local_target="$$target"; \
	fi; \
	(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	|| case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	done | \
	$(AWK) '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
	$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	if test "$$subdir" = .; then :; else \
	test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	fi; \
	done; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	done | \
	$(AWK) '    { files[$$0] = 1; } \
	END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	|| etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	&& cd $(top_srcdir) \
	&& gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=widgets.desktop 

DISTFILES= $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	if test -f $$file; then d=.; else d=$(srcdir); fi; \
	dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	$(mkinstalldirs) "$(distdir)/$$dir"; \
	fi; \
	if test -d $$d/$$file; then \
	cp -pR $$d/$$file $(distdir) \
	|| exit 1; \
	else \
	test -f $(distdir)/$$file \
	|| cp -p $$d/$$file $(distdir)/$$file \
	|| exit 1; \
	fi; \
	done
	for subdir in $(SUBDIRS); do \
	if test "$$subdir" = .; then :; else \
	test -d $(distdir)/$$subdir \
	|| mkdir $(distdir)/$$subdir \
	|| exit 1; \
	(cd $$subdir && \
	$(MAKE) $(AM_MAKEFLAGS) \
	top_distdir="$(top_distdir)" \
	distdir=../$(distdir)/$$subdir \
	distdir) \
	|| exit 1; \
	fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	`test -z '$(STRIP)' || \
	echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
#>- mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-final  clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-recursive distclean distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-libLTLIBRARIES install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libLTLIBRARIES \
	uninstall-recursive


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/widgets.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
subdialog.moc.cpp: $(srcdir)/subdialog.h
	$(MOC) $(srcdir)/subdialog.h -o subdialog.moc.cpp

#>+ 3
groupbox.moc.cpp: $(srcdir)/groupbox.h
	$(MOC) $(srcdir)/groupbox.h -o groupbox.moc.cpp

#>+ 3
tabwidget.moc.cpp: $(srcdir)/tabwidget.h
	$(MOC) $(srcdir)/tabwidget.h -o tabwidget.moc.cpp

#>+ 3
buttongroup.moc.cpp: $(srcdir)/buttongroup.h
	$(MOC) $(srcdir)/buttongroup.h -o buttongroup.moc.cpp

#>+ 3
dialog.moc.cpp: $(srcdir)/dialog.h
	$(MOC) $(srcdir)/dialog.h -o dialog.moc.cpp

#>+ 3
execbutton.moc.cpp: $(srcdir)/execbutton.h
	$(MOC) $(srcdir)/execbutton.h -o execbutton.moc.cpp

#>+ 3
radiobutton.moc.cpp: $(srcdir)/radiobutton.h
	$(MOC) $(srcdir)/radiobutton.h -o radiobutton.moc.cpp

#>+ 3
myprocess.moc.cpp: $(srcdir)/myprocess.h
	$(MOC) $(srcdir)/myprocess.h -o myprocess.moc.cpp

#>+ 3
textedit.moc.cpp: $(srcdir)/textedit.h
	$(MOC) $(srcdir)/textedit.h -o textedit.moc.cpp

#>+ 3
combobox.moc.cpp: $(srcdir)/combobox.h
	$(MOC) $(srcdir)/combobox.h -o combobox.moc.cpp

#>+ 3
spinboxint.moc.cpp: $(srcdir)/spinboxint.h
	$(MOC) $(srcdir)/spinboxint.h -o spinboxint.moc.cpp

#>+ 3
lineedit.moc.cpp: $(srcdir)/lineedit.h
	$(MOC) $(srcdir)/lineedit.h -o lineedit.moc.cpp

#>+ 3
fileselector.moc.cpp: $(srcdir)/fileselector.h
	$(MOC) $(srcdir)/fileselector.h -o fileselector.moc.cpp

#>+ 3
listbox.moc.cpp: $(srcdir)/listbox.h
	$(MOC) $(srcdir)/listbox.h -o listbox.moc.cpp

#>+ 3
closebutton.moc.cpp: $(srcdir)/closebutton.h
	$(MOC) $(srcdir)/closebutton.h -o closebutton.moc.cpp

#>+ 3
wizard.moc.cpp: $(srcdir)/wizard.h
	$(MOC) $(srcdir)/wizard.h -o wizard.moc.cpp

#>+ 3
checkbox.moc.cpp: $(srcdir)/checkbox.h
	$(MOC) $(srcdir)/checkbox.h -o checkbox.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  subdialog.moc.cpp groupbox.moc.cpp tabwidget.moc.cpp buttongroup.moc.cpp dialog.moc.cpp execbutton.moc.cpp radiobutton.moc.cpp myprocess.moc.cpp textedit.moc.cpp combobox.moc.cpp spinboxint.moc.cpp lineedit.moc.cpp fileselector.moc.cpp listbox.moc.cpp closebutton.moc.cpp wizard.moc.cpp checkbox.moc.cpp

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	$(AUTOMAKE) --gnu  widgets/Makefile
	cd $(top_srcdir) && perl admin/am_edit widgets/Makefile.in


#>+ 11
libkommanderwidgets_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/assoctextwidget.cpp $(srcdir)/myprocess.cpp $(srcdir)/buttongroup.cpp $(srcdir)/ewidgetfactory.cpp $(srcdir)/subdialog.cpp $(srcdir)/checkbox.cpp $(srcdir)/closebutton.cpp $(srcdir)/combobox.cpp $(srcdir)/listbox.cpp $(srcdir)/wizard.cpp $(srcdir)/dialog.cpp $(srcdir)/tabwidget.cpp $(srcdir)/execbutton.cpp $(srcdir)/fileselector.cpp $(srcdir)/groupbox.cpp $(srcdir)/lineedit.cpp $(srcdir)/radiobutton.cpp $(srcdir)/spinboxint.cpp $(srcdir)/textedit.cpp $(srcdir)/tabwidget.moc.cpp $(srcdir)/dialog.moc.cpp $(srcdir)/combobox.moc.cpp $(srcdir)/fileselector.moc.cpp $(srcdir)/lineedit.moc.cpp $(srcdir)/closebutton.moc.cpp listbox.moc.cpp $(srcdir)/subdialog.moc.cpp $(srcdir)/groupbox.moc.cpp $(srcdir)/buttongroup.moc.cpp $(srcdir)/execbutton.moc.cpp $(srcdir)/radiobutton.moc.cpp $(srcdir)/myprocess.moc.cpp $(srcdir)/textedit.moc.cpp $(srcdir)/spinboxint.moc.cpp $(srcdir)/wizard.moc.cpp $(srcdir)/checkbox.moc.cpp 
	@echo 'creating libkommanderwidgets_la.all_cpp.cpp ...'; \
	rm -f libkommanderwidgets_la.all_cpp.files libkommanderwidgets_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkommanderwidgets_la.all_cpp.final; \
	for file in assoctextwidget.cpp myprocess.cpp buttongroup.cpp ewidgetfactory.cpp subdialog.cpp checkbox.cpp closebutton.cpp combobox.cpp listbox.cpp wizard.cpp dialog.cpp tabwidget.cpp execbutton.cpp fileselector.cpp groupbox.cpp lineedit.cpp radiobutton.cpp spinboxint.cpp textedit.cpp tabwidget.moc.cpp dialog.moc.cpp combobox.moc.cpp fileselector.moc.cpp lineedit.moc.cpp closebutton.moc.cpp listbox.moc.cpp subdialog.moc.cpp groupbox.moc.cpp buttongroup.moc.cpp execbutton.moc.cpp radiobutton.moc.cpp myprocess.moc.cpp textedit.moc.cpp spinboxint.moc.cpp wizard.moc.cpp checkbox.moc.cpp ; do \
	  echo "#include \"$$file\"" >> libkommanderwidgets_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkommanderwidgets_la.all_cpp.final; \
	done; \
	cat libkommanderwidgets_la.all_cpp.final libkommanderwidgets_la.all_cpp.files > libkommanderwidgets_la.all_cpp.cpp; \
	rm -f libkommanderwidgets_la.all_cpp.final libkommanderwidgets_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkommanderwidgets_la.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libkommanderwidgets_la_OBJECTS="$(libkommanderwidgets_la_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) libkommanderwidgets_la_OBJECTS="$(libkommanderwidgets_la_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) libkommanderwidgets_la_OBJECTS="$(libkommanderwidgets_la_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) libkommanderwidgets_la_OBJECTS="$(libkommanderwidgets_la_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo
